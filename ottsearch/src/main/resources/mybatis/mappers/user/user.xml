<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.user">
	<resultMap id="userResult" type="UserDTO">
	    <result property="userId" column="user_id" />
	    <result property="email" column="email" />
	    <result property="password" column="password" />
	    <result property="userName" column="user_name" />
	    <result property="nickname" column="nickname" />
	    <result property="phoneNumber" column="phone_number" />
	    <result property="birthDate" column="birth_date" />
	    <result property="signupDate" column="signup_date" />
	    <result property="userRole" column="user_role" />
	    <result property="isDeleted" column="is_deleted" />
	</resultMap>

	<insert id="insertNewUser" parameterType="UserDTO" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">  
	    <![CDATA[ 
	    INSERT INTO users (email, user_name, nickname, password,
	    phone_number, birth_date, signup_date
	    ) VALUES (#{email}, #{userName}, #{nickname}, #{password},
	    #{phoneNumber}, #{birthDate}, #{signupDate})   
	     ]]>
	</insert>
    
	<!-- 이메일 중복체크 -->
	 <select id="emailCheck" resultType="int">
        SELECT COUNT(*) FROM users
        WHERE email = #{email}
    </select> 
    
    <!-- 닉네임 중복체크 -->
	 <select id="nickCheck" resultType="int">
        SELECT COUNT(*) FROM users
        WHERE nickname = #{nickname}
    </select> 
    
     <!-- 전화번호 중복체크 -->
	 <select id="numbCheck" resultType="int">
        SELECT COUNT(*) FROM users
        WHERE phone_number = #{phoneNumber}
    </select> 
    
    <select id="findEmail" resultType="string">
        SELECT email
        FROM users
        WHERE email = #{email}
    </select>
    
	
	<select id="loginById" resultMap="userResult" parameterType="userDTO">
	    SELECT user_id, email, password, user_name, nickname, 
	           phone_number, birth_date, signup_date, user_role, is_deleted
	    FROM users
	    WHERE email = #{email} AND password = #{password} AND is_deleted = 'N'
	</select>

    
    <!-- 패스워드 체크 -->
    <select id="passCheck" resultType="int">
    	SELECT COUNT(*) FROM users
    	WHERE EMAIL = #{email} and PASSWORD = #{password}
    </select>
    
    <select id="getAllusers" resultMap="userResult">
	    SELECT 
	    user_id, email, username, nickname, password,
	    phone_number, birth_date, signup_date, user_role, is_deleted
	    FROM users
	</select>
	
    <select id="selectUserInfoByUserId"  parameterType="UserDTO" resultMap="userResult">
        SELECT 
        user_id, email, user_name, nickname, password,
	    phone_number, birth_date, signup_date, user_role, is_deleted
        FROM users WHERE user_id = #{userId}
    </select>
	
	<!-- 마이페이지 회원정보 업데이트 -->
	<update id="updateUser" parameterType="UserDTO">
	    UPDATE users
	    SET nickname = #{nickname}, 
	        phone_number = #{phoneNumber}, 
	        password = #{password}
	    WHERE user_id = #{userId}
	</update>
	
	<!-- 회원 탈퇴 처리 -->
	<update id="deleteUser">
	    UPDATE users
	    SET is_deleted = 'Y'
	    WHERE user_id = #{userId}
	</update>
	
  	<select id="getAllUserList" resultMap="userResult" parameterType="map">
 	    <![CDATA[
		    SELECT * FROM (
	        SELECT u.*, ROWNUM rnum FROM (
        	   SELECT *
					   FROM users
					   ORDER BY user_id
	        ) u
	        WHERE ROWNUM <= #{endRow}
		    )
		    WHERE rnum >= #{startRow}
	    ]]>
	</select>
	
  	<select id="countUsers" resultType="int">
	   SELECT COUNT(*)
	   FROM users
	</select>
	    
   <update id="updateUserRole" parameterType="map">
	    <![CDATA[
		    UPDATE users
		    SET user_role = #{role}
		    WHERE user_id = #{userId}
 	    ]]>
   </update>

	</mapper>